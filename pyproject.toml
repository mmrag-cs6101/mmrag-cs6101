[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[project]
name = "mrag-bench"
version = "1.0.0"
description = "MRAG-Bench Reproduction System - Multimodal RAG for Medical Imaging"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AI Engineer", email = "engineer@example.com"},
]
keywords = ["mrag-bench", "multimodal", "rag", "medical", "llava", "clip", "reproduction"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    # Core ML Libraries
    "torch>=2.1.0",
    "torchvision>=0.16.0", 
    "torchaudio>=2.1.0",
    "transformers>=4.35.0",
    "accelerate>=0.24.0",
    
    # Vision and Multimodal
    "timm>=0.9.10",
    "pillow>=10.0.0",
    "opencv-python>=4.8.0",
    
    # Vector Search and Retrieval
    "faiss-cpu>=1.7.2",
    "sentence-transformers>=2.2.2",
    
    # Medical Data Processing
    "pydicom>=2.4.3",
    "nibabel>=5.1.0",
    "SimpleITK>=2.3.0",
    
    # Web Interface and Demo
    "gradio>=4.0.0",
    "streamlit>=1.28.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    
    # Data Processing
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "datasets>=2.14.0",
    
    # Evaluation and Metrics
    "nltk>=3.8.0",
    "rouge-score>=0.1.2",
    "sacrebleu>=2.3.1",
    "bert-score>=0.3.13",
    
    # Utilities
    "tqdm>=4.66.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

[project.optional-dependencies]
# GPU support
gpu = [
    "faiss-gpu>=1.7.2",
]

# Development tools
dev = [
    "pytest>=7.4.0",
    "black>=23.0.0",
    "isort>=5.12.0", 
    "flake8>=6.0.0",
    "pre-commit>=3.4.0",
    "mypy>=1.5.0",
]

# Experiment tracking
experiments = [
    "wandb>=0.15.0",
    "tensorboard>=2.14.0",
]

# Distributed training
distributed = [
    "deepspeed>=0.10.0",
]

# All extras combined
all = [
    "medical-multimodal-rag[gpu,dev,experiments,distributed]",
]

[project.urls]
Homepage = "https://github.com/your-team/medical-multimodal-rag"
Repository = "https://github.com/your-team/medical-multimodal-rag"
Issues = "https://github.com/your-team/medical-multimodal-rag/issues"
Documentation = "https://github.com/your-team/medical-multimodal-rag#readme"

[project.scripts]
medical-rag-test = "test_medical_rag:main"
medical-rag-demo = "src.demo.gradio_interface:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "black>=23.0.0", 
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pre-commit>=3.4.0",
    "mypy>=1.5.0",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | data
  | checkpoints
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU",
    "integration: marks tests as integration tests",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true